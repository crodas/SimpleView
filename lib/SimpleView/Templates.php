<?php
/**
 *  This file was generated with crodas/SimpleView (https://github.com/crodas/SimpleView)
 *  Do not edit this file.
 *
 */

namespace {


    class base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {
        protected $parent;
        protected $child;
        protected $context;

        public function yield_parent($name, $args)
        {
            $method = "section_" . sha1($name);

            if (is_callable(array($this->parent, $method))) {
                $this->parent->$method(array_merge($this->context, $args));
                return true;
            }

            if ($this->parent) {
                return $this->parent->yield_parent($name, $args);
            }

            return false;
        }

        public function do_yield($name, Array $args = array())
        {
            if ($this->child) {
                // We have a children template, we are their base
                // so let's see if they have implemented by any change
                // this section
                if ($this->child->do_yield($name, $args)) {
                    // yes!
                    return true;
                }
            }

            // Do I have this section defined?
            $method = "section_" . sha1($name);
            if (is_callable(array($this, $method))) {
                // Yes!
                $this->$method(array_merge($this->context, $args));
                return true;
            }

            // No :-(
            return false;
        }

    }

    /** 
     *  Template class generated from Unless.tpl.php
     */
    class class_f5ab41dedb21a24081861ee6a36af5e59365a600 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "if (!(" . ($token[1]) . ")) {\n";
            crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[2]), $this->context);
            echo "}\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Newline.tpl.php
     */
    class class_cfa7269ec959308c668047e4aa1cd1d833f91eb6 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }


            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Foreach.tpl.php
     */
    class class_55a865e988d24c0d11ce50bc8c11519a2d28b743 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "foreach(" . ($token[1]) . ") {\n";
            $vars = preg_split("/\bas\b/", $token[1], 2);
            $this->context['vars'] = $vars;
            $vars = explode("=>", $vars[1]);
            $this->context['vars'] = $vars;
            echo "\n";
            foreach($vars as $var) {

                $this->context['var'] = $var;
                echo "        \$this->context[";
                var_export(substr(trim($var),1));
                echo "] = " . (trim($var)) . ";\n";
            }
            crodas\SimpleView\Templates\Templates::exec('body', array('tpl' => $token[2]), $this->context);
            echo "}\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Set.tpl.php
     */
    class class_c36eec984e05803cb157ccb02bc2517cf30266a3 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "    " . ($token[1]) . " = " . ($token[2]) . ";\n";
            if (preg_match("/^\\$[a-z_][a-z_0-9]*$/i", trim($token[1]))) {
                echo "        \$this->context[";
                var_export(substr(trim($token[1]), 1));
                echo "] = " . ($token[1]) . ";\n";
            }

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Class.tpl.php
     */
    class class_ed71512c603ba20ba49346284ee12f19b5d744de extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "<?php\n/**\n *  This file was generated with crodas/SimpleView (https://github.com/crodas/SimpleView)\n *  Do not edit this file.\n *\n */\n\nnamespace {\n\n";
            $hash = uniqid();
            $this->context['hash'] = $hash;
            echo "\nclass base_template_";
            echo sha1($namespace) . "\n{\n    protected \$parent;\n    protected \$child;\n    protected \$context;\n\n    public function yield_parent(\$name, \$args)\n    {\n        \$method = \"section_\" . sha1(\$name);\n\n        if (is_callable(array(\$this->parent, \$method))) {\n            \$this->parent->\$method(array_merge(\$this->context, \$args));\n            return true;\n        }\n\n        if (\$this->parent) {\n            return \$this->parent->yield_parent(\$name, \$args);\n        }\n\n        return false;\n    }\n\n    public function do_yield(\$name, Array \$args = array())\n    {\n        if (\$this->child) {\n            // We have a children template, we are their base\n            // so let's see if they have implemented by any change\n            // this section\n            if (\$this->child->do_yield(\$name, \$args)) {\n                // yes!\n                return true;\n            }\n        }\n\n        // Do I have this section defined?\n        \$method = \"section_\" . sha1(\$name);\n        if (is_callable(array(\$this, \$method))) {\n            // Yes!\n            \$this->\$method(array_merge(\$this->context, \$args));\n            return true;\n        }\n\n        // No :-(\n        return false;\n    }\n\n}\n\n";
            foreach($tpls as $name => $tpl) {

                $this->context['name'] = $name;
                $this->context['tpl'] = $tpl;
                echo "    /** \n     *  Template class generated from ";
                echo $tpl->getSource() . "\n     */\nclass class_";
                echo sha1($name) . " extends base_template_" . (sha1($namespace)) . "\n{\n";
                foreach($tpl->getSections() as $name => $code) {

                    $this->context['name'] = $name;
                    $this->context['code'] = $code;
                    echo "    protected function section_" . (sha1($name)) . "(\$context)\n    {\n        extract(\$context);\n";
                    crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $code), $this->context);
                    echo "    }\n";
                }
                echo "\n    public function hasSection(\$name)\n    {\n";
                if ($tpl->getSections()) {
                    echo "            switch (\$name) {\n";
                    foreach($tpl->getSections() as $name => $code) {

                        $this->context['name'] = $name;
                        $this->context['code'] = $code;
                        echo "                case ";
                        var_export($name);
                        echo ":\n";
                    }
                    echo "                return true;\n            }\n";
                }
                echo "\n        return false;\n    }\n\n\n    public function renderSection(\$name, Array \$args = array(), \$fail_on_missing = true)\n    {\n        if (!\$this->hasSection(\$name)) {\n            if (\$fail_on_missing) {\n                throw new \\RuntimeException(\"Cannot find section {\$name}\");\n            }\n            return \"\";\n        }\n\n";
                if ($tpl->getSections()) {
                    echo "            ob_start();\n            switch (\$name) {\n";
                    foreach($tpl->getSections() as $name => $code) {

                        $this->context['name'] = $name;
                        $this->context['code'] = $code;
                        echo "            case ";
                        var_export($name);
                        echo ":\n                try {\n                    \$this->section_";
                        echo sha1($name) . "(\$args);\n                } catch (Exception \$e) {\n                    ob_get_clean();\n                    throw \$e;\n                }\n                break;\n    \n";
                    }
                    echo "            }\n    \n            return ob_get_clean();\n";
                }
                echo "    }\n\n    public function render(Array \$vars = array(), \$return = false)\n    {\n        try {\n            return \$this->_render(\$vars, \$return);\n        } catch (Exception \$e) {\n            if (\$return) ob_get_clean();\n            throw \$e;\n        }\n    }\n\n    public function _render(Array \$vars = array(), \$return = false)\n    {\n        \$this->context = \$vars;\n\n";
                if ($tpl->getParent()) {
                    echo "        \$template = " . ($namespace) . "\\Templates::get(" . ($tpl->getParent()) . ");\n        \$template->child = \$this;\n        \$this->parent = \$template;\n        return \$template->render(\$vars, \$return);\n\n";
                }
                else {
                    echo "        extract(\$vars);\n        if (\$return) {\n            ob_start();\n        }\n\n";
                    crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $tpl), $this->context);
                    echo "\n        if (\$return) {\n            return ob_get_clean();\n        }\n\n";
                }
                echo "    }\n}\n\n";
            }
            echo "}\n\nnamespace ";
            echo $namespace . " {\n\n\nclass Templates\n{\n    public static function getAll()\n    {\n        return ";
            var_export($list);
            echo ";\n    }\n\n    public static function getAllSections(\$name, \$fail = true)\n    {\n        switch (\$name) {\n";
            foreach($sections as $name => $tpls) {

                $this->context['name'] = $name;
                $this->context['tpls'] = $tpls;
                echo "        case ";
                var_export($name);
                echo ":\n            return ";
                var_export($tpls);
                echo ";\n";
            }
            echo "        default:\n            if (\$fail) {\n                throw new \\RuntimeException(\"Cannot find section {\$name}\");\n            }\n\n            return array();\n        }\n    }\n\n    public static function exec(\$name, Array \$context = array(), Array \$global = array())\n    {\n        \$tpl = self::get(\$name);\n        return \$tpl->render(array_merge(\$global, \$context));\n    }\n\n    public static function get(\$name, Array \$context = array())\n    {\n        static \$classes = ";
            var_export($classes);
            echo ";\n        \$name = strtolower(\$name);\n        if (empty(\$classes[\$name])) {\n            throw new \\RuntimeException(\"Cannot find template \$name\");\n        }\n\n        \$class = \"\\\\\" . \$classes[\$name];\n        return new \$class;\n    }\n}\n\n}\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Echo.tpl.php
     */
    class class_1708ebe9d99ba4e58c0ae7fffeacd2f3eee56157 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "echo " . ($token[1]) . ";\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Else.tpl.php
     */
    class class_55654f0db518414907f78793b7d027601d43ad01 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "else {\n";
            crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[1]), $this->context);
            echo "}\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Spaceless.tpl.php
     */
    class class_e5f3aacac71e677703efc7f7d2621463a25e5059 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[1]), $this->context);

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from While.tpl.php
     */
    class class_6b1bcd97e93ed2c0cb9aac64a2ca1db0d5c1bbfd extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "while (" . ($token[1]) . ") {\n";
            crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[2]), $this->context);
            echo "}\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Yield.tpl.php
     */
    class class_a7fd4ba6aa8322c865f773ab9961440df3ccad7e extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "\$this->do_yield(" . ($token[1]) . ");\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Echox.tpl.php
     */
    class class_b3f21f4b7452906b330612b966219cc089b11145 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "echo htmlentities(" . ($token[1]) . ", ENT_QUOTES, 'UTF-8', false);\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from If.tpl.php
     */
    class class_47c00cca182fe3bc9f62a5b97ca88b8096be84f9 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "if (" . ($token[1]) . ") {\n";
            crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[2]), $this->context);
            echo "} \n";
            if (!empty($token[3])) {
                crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[3]), $this->context);
            }

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from ElseIf.tpl.php
     */
    class class_29c582cf88090afb569826fab26c5ff2408174a6 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "else if (" . ($token[1]) . ") {\n";
            crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[2]), $this->context);
            echo "} \n";
            if (!empty($token[3])) {
                crodas\SimpleView\Templates\Templates::exec("body", array('tpl' => $token[3]), $this->context);
            }
            echo "\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Var_export.tpl.php
     */
    class class_4c7ae9b989b5399767f582c58a57086e7e11e353 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "var_export(" . ($token[1]) . ");\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Body.tpl.php
     */
    class class_399877791885ad1a9fde51bca4deb52107f94699 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            foreach($tpl->getStmts() as $token) {

                $this->context['token'] = $token;
                if ($token instanceof \crodas\SimpleView\Macro\Base) {
                    echo "        " . ($token->run($this->context)) . "\n";
                }
                else {
                    crodas\SimpleView\Templates\Templates::exec($token[0], array('token' => $token ), $this->context);
                }
            }

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Break.tpl.php
     */
    class class_f438effbfd0e1abc280c3a5fd5c49a6b609fdece extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "    break;\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Continue.tpl.php
     */
    class class_a5a85b8b99262519741caf9201827cb2a6a2b36f extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "    continue;\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Parent.tpl.php
     */
    class class_5d7cda60ed67317c63462a7a3f97c1eaa6a18d4e extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo "\$this->yield_parent(" . ($token[1]) . ", \$context);\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Include.tpl.php
     */
    class class_6ab34a3d879c7067d4dc67f5af3a8dd380cd3156 extends base_template_a7583170cd46360a631dc3d57f152bbeb4c37551
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (Exception $e) {
                if ($return) ob_get_clean();
                throw $e;
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }

            echo $namespace . "\\Templates::exec(" . ($token[1]) . ", \$this->context);\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

}

namespace crodas\SimpleView\Templates {


    class Templates
    {
        public static function getAll()
        {
            return array (
                0 => 'unless',
                1 => 'newline',
                2 => 'foreach',
                3 => 'set',
                4 => 'class',
                5 => 'echo',
                6 => 'else',
                7 => 'spaceless',
                8 => 'while',
                9 => 'yield',
                10 => 'echox',
                11 => 'if',
                12 => 'elseif',
                13 => 'var_export',
                14 => 'body',
                15 => 'break',
                16 => 'continue',
                17 => 'parent',
                18 => 'include',
            );
        }

        public static function getAllSections($name, $fail = true)
        {
            switch ($name) {
            default:
                if ($fail) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }

                return array();
            }
        }

        public static function exec($name, Array $context = array(), Array $global = array())
        {
            $tpl = self::get($name);
            return $tpl->render(array_merge($global, $context));
        }

        public static function get($name, Array $context = array())
        {
            static $classes = array (
                'unless.tpl.php' => 'class_f5ab41dedb21a24081861ee6a36af5e59365a600',
                'unless' => 'class_f5ab41dedb21a24081861ee6a36af5e59365a600',
                'newline.tpl.php' => 'class_cfa7269ec959308c668047e4aa1cd1d833f91eb6',
                'newline' => 'class_cfa7269ec959308c668047e4aa1cd1d833f91eb6',
                'foreach.tpl.php' => 'class_55a865e988d24c0d11ce50bc8c11519a2d28b743',
                'foreach' => 'class_55a865e988d24c0d11ce50bc8c11519a2d28b743',
                'set.tpl.php' => 'class_c36eec984e05803cb157ccb02bc2517cf30266a3',
                'set' => 'class_c36eec984e05803cb157ccb02bc2517cf30266a3',
                'class.tpl.php' => 'class_ed71512c603ba20ba49346284ee12f19b5d744de',
                'class' => 'class_ed71512c603ba20ba49346284ee12f19b5d744de',
                'echo.tpl.php' => 'class_1708ebe9d99ba4e58c0ae7fffeacd2f3eee56157',
                'echo' => 'class_1708ebe9d99ba4e58c0ae7fffeacd2f3eee56157',
                'else.tpl.php' => 'class_55654f0db518414907f78793b7d027601d43ad01',
                'else' => 'class_55654f0db518414907f78793b7d027601d43ad01',
                'spaceless.tpl.php' => 'class_e5f3aacac71e677703efc7f7d2621463a25e5059',
                'spaceless' => 'class_e5f3aacac71e677703efc7f7d2621463a25e5059',
                'while.tpl.php' => 'class_6b1bcd97e93ed2c0cb9aac64a2ca1db0d5c1bbfd',
                'while' => 'class_6b1bcd97e93ed2c0cb9aac64a2ca1db0d5c1bbfd',
                'yield.tpl.php' => 'class_a7fd4ba6aa8322c865f773ab9961440df3ccad7e',
                'yield' => 'class_a7fd4ba6aa8322c865f773ab9961440df3ccad7e',
                'echox.tpl.php' => 'class_b3f21f4b7452906b330612b966219cc089b11145',
                'echox' => 'class_b3f21f4b7452906b330612b966219cc089b11145',
                'if.tpl.php' => 'class_47c00cca182fe3bc9f62a5b97ca88b8096be84f9',
                'if' => 'class_47c00cca182fe3bc9f62a5b97ca88b8096be84f9',
                'elseif.tpl.php' => 'class_29c582cf88090afb569826fab26c5ff2408174a6',
                'elseif' => 'class_29c582cf88090afb569826fab26c5ff2408174a6',
                'var_export.tpl.php' => 'class_4c7ae9b989b5399767f582c58a57086e7e11e353',
                'var_export' => 'class_4c7ae9b989b5399767f582c58a57086e7e11e353',
                'body.tpl.php' => 'class_399877791885ad1a9fde51bca4deb52107f94699',
                'body' => 'class_399877791885ad1a9fde51bca4deb52107f94699',
                'break.tpl.php' => 'class_f438effbfd0e1abc280c3a5fd5c49a6b609fdece',
                'break' => 'class_f438effbfd0e1abc280c3a5fd5c49a6b609fdece',
                'continue.tpl.php' => 'class_a5a85b8b99262519741caf9201827cb2a6a2b36f',
                'continue' => 'class_a5a85b8b99262519741caf9201827cb2a6a2b36f',
                'parent.tpl.php' => 'class_5d7cda60ed67317c63462a7a3f97c1eaa6a18d4e',
                'parent' => 'class_5d7cda60ed67317c63462a7a3f97c1eaa6a18d4e',
                'include.tpl.php' => 'class_6ab34a3d879c7067d4dc67f5af3a8dd380cd3156',
                'include' => 'class_6ab34a3d879c7067d4dc67f5af3a8dd380cd3156',
            );
            $name = strtolower($name);
            if (empty($classes[$name])) {
                throw new \RuntimeException("Cannot find template $name");
            }

            $class = "\\" . $classes[$name];
            return new $class;
        }
    }

}
